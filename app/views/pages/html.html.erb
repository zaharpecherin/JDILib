<div class="container has-text-centered mb-6">
  <%= image_tag "html-page/html.svg", class: "guide-image mt-4" %>

  <h1 class="mt-6">Учебное пособие по HTML</h1>
  <h2>Введение в язык гипертекстовой разметки</h2>
</div>

<div class="container has-text-centered mt-5">
  <p>
    HTML – <i>язык гипертекстовой разметки</i> – самый базовый строительный блок Веба. Он определяет
    содержание и структуру веб-контента.
  </p>

  <p>
    Под гипертекстом – <i>hypertext</i> – понимаются ссылки, которые соединяют веб-страницы друг с
    другом либо в пределах одного веб-сайта, либо между веб-сайтами.
  </p>

  <p>
    HTML использует разметку – markup – для отображения текста, изображений и другого контента в
    веб-браузере. HTML-разметка включает в себя специальные “элементы”, такие как <code>&lt;head&gt;</code>,
    <code>&lt;title&gt;</code>, <code>&lt;body&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>,
    <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>,
    <code>&lt;span&gt;</code>, <code>&lt;img&gt;</code>, <code>&lt;audio&gt;</code>, <code>&lt;canvas&gt;</code>,
    <code>&lt;datalist&gt;</code>, <code>&lt;details&gt;</code>, <code>&lt;embed&gt;</code>, <code>&lt;nav&gt;</code>,
    <code>&lt;video&gt;</code> и многие другие.
  </p>

  <p>Эти элементы структурируют веб-страницу и определяют ее содержимое. Давайте посмотрим, как они написаны.</p>

  <p>На диаграмме отображается элемент абзаца – <i>paragraph</i>.</p>

  <%= image_tag "html-page/paragraph.png" %>

  <p class="mt-5">Как мы видим, элемент абзаца состоит из:</p>

  <p>
    Открывающий тег – <code>&lt;p&gt;</code>
    <br/>
    Контент – текст “Hello World!”
    <br/>
    Закрывающий тег – <code>&lt;/p&gt;</code>
  </p>

  <p>
    Тег и содержимое между ним называется элементом HTML. Есть много тегов, которые мы можем использовать
    для организации и отображения текста и других типов контента, например изображений.
  </p>

  <p>
    Элемент HTML – единица содержимого в документе HTML, образованная тегами и содержащимся в нем текстом
    или мультимедиа.
  </p>

  <p>
    Тег HTML - имя элемента, окруженное открывающей <code>&lt;</code> и закрывающей <code>&gt;</code>
    угловой скобкой.
  </p>

  <p>
    Открывающий тег – первый HTML-тег, используемый для запуска HTML-элемента. Тип тега заключен в
    открывающую и закрывающую угловые скобки.
    <br/>
    Содержимое – информация (текст или другие элементы), содержащаяся между открывающим и закрывающим
    тегами HTML-элемента.
    <br/>
    Закрывающий тег – второй HTML-тег, используемый для завершения HTML-элемента. Закрывающие теги
    имеют внутри косую черту <code>/</code> сразу после левой угловой скобки.
  </p>

  <p>
    Одним из ключевых элементов HTML, которые мы используем для создания веб-страницы, является элемент
    <code>body</code>. На экране может отображаться только содержимое внутри открывающего и закрывающего
    тегов тела.
  </p>

  <p>
    Если у файла есть тело, к нему можно добавить много различных типов контента, включая текст,
    изображения и кнопки.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;body&gt;
        &lt;p&gt;What's up, doc?&lt;/p&gt;
      &lt;/body&gt;
    </code>
  </div>

  <p class="mt-5">
    HTML организован как набор взаимосвязей генеалогического дерева. Мы разместили теги <code>&lt;p&gt;</code>
    внутри тегов <code>&lt;body&gt;</code>. Когда элемент содержится внутри другого элемента, он считается
    дочерним элементом этого элемента. Дочерний элемент называется вложенным внутри родительского элемента.
  </p>

  <p>
    В данном случае элемент <code>&lt;p&gt;</code> считается дочерним по отношению к элементу
    <code>&lt;body&gt;</code>, а элемент <code>&lt;body&gt;</code> считается родительским. Вы
    также можете видеть, что мы добавили два пробела для отступа (с помощью клавиши пробела)
    для лучшей читаемости.
  </p>

  <p>
    Поскольку может быть несколько уровней вложенности, эту аналогию можно распространить на все последующие
    вложения. Отношения между элементами и их элементами-предками и потомками известны как иерархия.
  </p>


  <h4 class="mt-6">Заголовки</h4>

  <p class="mt-4">
    Заголовки в HTML аналогичны заголовкам в других типах медиа. В HTML есть шесть разных заголовков или
    элементов заголовка. Заголовки могут использоваться для различных целей, например для обозначения
    разделов, статей или других форм содержания.
  </p>

  <p>
    Ниже приводится список элементов заголовка, доступных в HTML. Они расположены по размеру от самого
    большого до самого маленького.
  </p>

  <p>
    <code>&lt;h1&gt;</code> – используется для основных заголовков. Все остальные заголовки меньшего
    размера используются для подзаголовков.
    <br/>
    <code>&lt;h2&gt;</code>
    <br/>
    <code>&lt;h3&gt;</code>
    <br/>
    <code>&lt;h4&gt;</code>
    <br/>
    <code>&lt;h5&gt;</code>
    <br/>
    <code>&lt;h6&gt;</code>
  </p>

  <p>
    В следующем примере кода используется заголовок, предназначенный для привлечения внимания
    читателя. Он использует самый большой заголовок, основной элемент заголовка:
  </p>

  <code>&lt;h1&gt;BREAKING NEWS&lt;/h1&gt;</code>


  <h4 class="mt-6">Контейнеры</h4>

  <p class="mt-4">
    Одним из самых популярных элементов HTML является элемент <code>&lt;div&gt;</code>. Div - это
    сокращение от division – разделение. Это контейнер, который делит страницу на разделы. Эти
    разделы очень полезны для группирования элементов в вашем HTML.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;body&gt;
        &lt;div&gt;
          &lt;h1&gt;Why use divs?&lt;/h1&gt;
          &lt;p&gt;Great for grouping elements!&lt;/p&gt;
        &lt;/div&gt;
      &lt;/body&gt;
    </code>
  </div>

  <p class="mt-5">
    <code>&lt;div&gt;</code> по своей сути не имеют визуального представления, но они очень полезны,
    когда мы хотим применить пользовательские стили к нашим HTML-элементам. Контейнеры позволяют
    группировать элементы HTML, чтобы применять одинаковые стили для всех элементов HTML внутри.
  </p>

  <p>
    Контейнеры могут содержать любой текст или другие элементы HTML, такие как ссылки, изображения
    или видео. Не забывайте всегда добавлять два пробела отступа, когда вы вкладываете элементы
    внутри <code>&lt;div&gt;</code> для лучшей читаемости.
  </p>


  <h4 class="mt-6">Атрибуты</h4>

  <p class="mt-4">
    Если мы хотим расширить тег элемента, мы можем сделать это с помощью атрибута. Атрибуты – это контент,
    добавляемый к открывающему тегу элемента, и их можно использовать по-разному, от предоставления информации
    до изменения стиля. Атрибуты состоят из следующих двух частей:
  </p>

  <p>
    Имя – <code>name</code> – атрибута
    <br/>
    Значение – <code>value</code> – атрибута
  </p>

  <p>
    Один из часто используемых атрибутов – это <code>id</code>. Мы можем использовать атрибут <code>id</code>
    для указания различного контента, и это действительно полезно, когда вы используете элемент более одного
    раза. У идентификаторов есть несколько разных целей в HTML, но пока мы сосредоточимся на том, как они
    могут помочь нам идентифицировать контент на нашей странице.
  </p>

  <p>
    Когда мы добавляем идентификатор к <code>&lt;div&gt;</code>, мы помещаем его в открывающий тег:
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;div id="intro"&gt;
        &lt;h1&gt;Introduction&lt;/h1&gt;
      &lt;/div&gt;
    </code>
  </div>


  <h4 class="mt-6">Отображение текста</h4>

  <p class="mt-4">
    Если вы хотите отобразить текст в HTML, вы можете использовать <i>paragraph</i> или <i>span</i>:
  </p>

  <p>
    <code>&lt;p&gt;</code> содержит блок простого текста.
    <br/>
    <code>&lt;span&gt;</code> содержит короткие фрагменты текста или другой HTML–код. Они используются
    для разделения небольших фрагментов контента, которые находятся на одной строке с другим контентом.
  </p>

  <p>Взгляните на каждый из этих элементов в действии ниже:</p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;div&gt;
        &lt;h1&gt;Technology&lt;/h1&gt;
      &lt;/div&gt;

      &lt;div&gt;
        &lt;p&gt;
          &lt;span&gt;Self-driving cars&lt;/span&gt;
          are anticipated to replace up to 2 million jobs over the next two decades.
        &lt;/p&gt;
      &lt;/div&gt;
    </code>
  </div>

  <p class="mt-5">
    В приведенном выше примере есть два разных <code>&lt;div&gt;</code>. Второй <code>&lt;div&gt;</code>
    содержит <code>&lt;p&gt;</code> и <code>&lt;span&gt;</code>. Этот элемент <code>&lt;span&gt;</code>
    отделяет «Self-driving cars» от остального текста в абзаце.
  </p>

  <p>
    Лучше всего использовать элемент <code>&lt;span&gt;</code>, если вы хотите настроить таргетинг на
    определенный фрагмент контента, который является встроенным или находится в той же строке, что и
    другой текст. Если вы хотите разделить свой контент на блоки, лучше использовать <code>&lt;div&gt;</code>.
  </p>


  <h4 class="mt-6">Стилизация текста</h4>

  <p class="mt-4">
    Вы также можете стилизовать текст с помощью HTML-тегов. Тег <code>&lt;em&gt;</code> делает текст
    курсивным, а тег <code>&lt;strong&gt;</code> – делает текст жирным.
  </p>

  <p>
    Позже, когда вы начнете стилизовать веб-сайты, вы решите, как браузеры должны отображать контент
    в тегах <code>&lt;em&gt;</code> и <code>&lt;strong&gt;</code>. Браузеры, однако, имеют встроенные
    таблицы стилей, которые обычно задают стили для этих тегов.
  </p>


  <h4 class="mt-6">Разрывы строк</h4>

  <p class="mt-4">
    Расстояние между кодом в HTML-файле не влияет на расположение элементов в браузере. Если вы хотите
    изменить интервал в браузере, вы можете использовать HTML-элемент разрыва строки: <code>&lt;br&gt;</code>.
  </p>

  <p>
    Элемент разрыва строки уникален, потому что он состоит только из начального тега. Вы можете использовать
    его в любом месте вашего HTML-кода, и в браузере будет отображаться разрыв строки.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;p&gt;
        The Nile River is the longest river &lt;br&gt; in the world,
        measuring over 6,850 &lt;br&gt; kilometers long (approximately
        4,260 &lt;br&gt; miles).
      &lt;/p&gt;
    </code>
  </div>


  <h4 class="mt-6">Неупорядоченные списки</h4>

  <p class="mt-4">
    Помимо организации текста в форме абзаца, вы также можете отображать содержимое в виде удобного для
    чтения списка.
  </p>

  <p>
    В HTML вы можете использовать тег неупорядоченного списка <code>&lt;ul&gt;</code> для создания списка
    элементов в произвольном порядке. В неупорядоченном списке отдельные элементы списка выделяются маркировкой.
  </p>

  <p>
    Элемент <code>&lt;ul&gt;</code> не должен содержать необработанный текст и не будет автоматически
    форматировать исходный текст в неупорядоченный список элементов. Отдельные элементы списка необходимо
    добавлять в неупорядоченный список с помощью тега <code>&lt;li&gt;</code>. Тег <code>&lt;li&gt;</code>
    или элемент списка используется для описания элемента в списке.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;ul&gt;
        &lt;li&gt;Limes&lt;/li&gt;
        &lt;li&gt;Tortillas&lt;/li&gt;
        &lt;li&gt;Chicken&lt;/li&gt;
      &lt;/ul&gt;
    </code>
  </div>

  <p class="mt-5">
    В приведенном выше примере список был создан с использованием тега <code>&lt;ul&gt;</code>, а все
    отдельные элементы списка были добавлены с помощью тегов <code>&lt;li&gt;</code>.
  </p>


  <h4 class="mt-6">Упорядоченные списки</h4>

  <p class="mt-4">
    Упорядоченные списки <code>&lt;ol&gt;</code> похожи на неупорядоченные списки, за исключением того,
    что каждый элемент списка пронумерован. Они полезны, когда вам нужно перечислить различные этапы
    процесса или ранжировать элементы от первого до последнего.
  </p>

  <p>
    Вы можете создать упорядоченный список с помощью тега <code>&lt;ol&gt;</code>, а затем добавить
    отдельные элементы списка в список с помощью тегов <code>&lt;li&gt;</code>.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;ol&gt;
        &lt;li&gt;Preheat the oven to 350 degrees.&lt;/li&gt;
        &lt;li&gt;Mix whole wheat flour, baking soda, and salt.&lt;/li&gt;
        &lt;li&gt;Cream the butter, sugar in separate bowl.&lt;/li&gt;
        &lt;li&gt;Add eggs and vanilla extract to bowl.&lt;/li&gt;
      &lt;/ol&gt;
    </code>
  </div>


  <h4 class="mt-6">Изображения</h4>

  <p class="mt-4">
    Все элементы, о которых вы узнали до сих пор (заголовки, абзацы, списки и интервалы), имеют одну
    общую черту: они полностью состоят из текста. Что, если вы хотите добавить на свою веб-страницу
    контент, не состоящий из текста, например изображения?
  </p>

  <p>
    Тег <code>&lt;img&gt;</code> позволяет добавлять изображение на веб-страницу. Для большинства
    элементов требуются как открывающие, так и закрывающие теги, но тег <code>&lt;img&gt;</code>
    является самозакрывающимся тегом. Обратите внимание, что конец тега <code>&lt;img&gt;</code>
    имеет косую черту <code>/</code>. Самозакрывающиеся теги могут включать или опускать последнюю
    косую черту – оба будут отображаться правильно.
  </p>

  <code>&lt;img src="image-location.jpg" /&gt;</code>

  <p class="mt-5">
    Тег <code>&lt;img&gt;</code> имеет обязательный атрибут src. В атрибуте src должен быть указан
    источник изображения или его расположение. В этом случае значение src должно быть унифицированным
    указателем ресурса (URL) изображения. URL-адрес - это веб-адрес или локальный адрес, где хранится
    файл.
  </p>

  <p>
    Часть работы веб-разработчика – сделать сайт доступным для пользователей любого уровня. Чтобы сделать
    Интернет более инклюзивным, нам необходимо подумать о том, что происходит, когда вспомогательные
    технологии, такие как программы чтения с экрана, сталкиваются с тегами изображений.
  </p>

  <p>
    Атрибут <code>alt</code>, означающий альтернативный текст, придает смысл изображениям на наших сайтах.
    Атрибут <code>alt</code> можно добавить к тегу изображения так же, как атрибут <code>src</code>. Значение
    <code>alt</code> должно быть описанием изображения.
  </p>

  <code>>&lt;img src="#" alt="A field of yellow sunflowers" /&gt;</code>

  <p class="mt-5">
    Атрибут <code>alt</code> также служит следующим целям:
  </p>

  <p>
    Если изображение не загружается на веб-страницу, пользователь может навести указатель мыши на область,
    изначально предназначенную для изображения, и прочитать краткое описание изображения. Это стало возможным
    благодаря описанию, которое вы предоставляете в атрибуте <code>alt</code>.
    <br/>
    Пользователи с ослабленным зрением часто просматривают веб-страницы с помощью программного обеспечения
    для чтения с экрана. Когда вы включаете атрибут <code>alt</code>, программа чтения с экрана может прочитать описание
    изображения вслух пользователю с ослабленным зрением.
    <br/>
    Атрибут <code>alt</code> также играет роль в поисковой оптимизации (SEO), поскольку поисковые системы не могут
    «видеть» изображения на веб-сайтах при сканировании Интернета. Наличие описательных атрибутов <code>alt</code>
    может улучшить рейтинг вашего сайта.
  </p>

  <p>
    Если изображение на веб-странице не является тем, которое передает какую-либо значимую информацию
    пользователю (с ослабленным зрением или иным образом), атрибут <code>alt</code> следует оставить пустым.
  </p>


  <h4 class="mt-6">Видео</h4>

  <p class="mt-4">
    Помимо изображений, HTML также поддерживает отображение видео. Как и тег <code>&lt;img&gt;</code>,
    тегу <code>&lt;video&gt;</code> требуется атрибут <code>src</code> со ссылкой на источник видео.
    Однако, в отличие от тега <code>&lt;img&gt;</code>, элемент <code>&lt;video&gt;</code> требует открывающего и
    закрывающего тегов.
  </p>

  <div style="text-align: initial">
    <code class="wrap-code">
      &lt;video src="myVideo.mp4" width="320" height="240" controls&gt;
        Video not supported
      &lt;/video&gt;
    </code>
  </div>

  <p class="mt-5">
    В этом примере источником видео (<code>src</code>) является myVideo.mp4. Источником может быть видеофайл,
    размещенный рядом с вашей веб-страницей, или URL-адрес, указывающий на видео-файл, размещенный на другой
    веб-странице.
  </p>

  <p>
    После атрибута <code>src</code> атрибуты <code>width</code> и <code>height</code> используются для установки
    размера видео, отображаемого в браузере. Атрибут controls указывает браузеру включить основные элементы
    управления видео: приостановить, воспроизвести и пропустить.
  </p>

  <p>
    Текст «Video not supported» между открывающим и закрывающим тегами видео будет отображаться только в
    том случае, если браузер не может загрузить видео.
  </p>


  <h4 class="mt-6">Выводы</h4>

  <p class="mt-4">Давайте посмотрим, что вы узнали на данный момент:</p>

  <p class="mb-6">
    HTML означает язык разметки гипертекста и используется для создания структуры и содержимого веб-страницы.
    <br/>
    Большинство HTML-элементов содержат открывающие и закрывающие теги с необработанным текстом или другими
    HTML-тегами между ними.
    <br/>
    Элементы HTML могут быть вложены внутрь других элементов. Замкнутый элемент является дочерним по отношению
    к окружающему родительскому элементу.
    <br/>
    Любой видимый контент должен быть помещен в открывающий и закрывающий теги <code>&lt;body&gt;</code>.
    <br/>
    Заголовки и подзаголовки, теги от <code>&lt;h1&gt;</code> до <code>&lt;h6&gt;</code>, используются для
    увеличения текста.
    <br/>
    Теги <code>&lt;p&gt;</code>, <code>&lt;span&gt;</code> и <code>&lt;div&gt;</code> определяют текст или блоки.
    <br/>
    Теги <code>&lt;em&gt;</code> и <code>&lt;strong&gt;</code> используются для стилизованного выделения текста.
    <br/>
    Разрывы строк создаются с помощью тега <code>&lt;br&gt;</code>.
    <br/>
    Упорядоченные списки (<code>&lt;ol&gt;</code>) нумеруются, а неупорядоченные списки
    (<code>&lt;ul&gt;</code>) - маркированы.
    <br/>
    Изображения (<code>&lt;img&gt;</code>) и видео (<code>&lt;video&gt;</code>) могут быть добавлены путем
    ссылки на существующий источник.
  </p>
</div>

<div class="container has-text-centered my-6">
  <article class="message is-danger">
    <div class="message-header">
      <p class="m-0">Обязательные ссылки для ознакомления</p>
    </div>
    <div class="message-body">
      <div class="useful-links">
        <a href="https://www.codecademy.com/learn/learn-html/modules/learn-html-elements/cheatsheet" target="_blank">
          Сводка по элементам и структуре
        </a>

        <a href="https://www.codecademy.com/learn/learn-html" target="_blank">
          Интерактивный курс по HTML
        </a>
      </div>
    </div>
  </article>
</div>
